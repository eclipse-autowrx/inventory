# Copyright (c) 2025 Eclipse Foundation.
#
# This program and the accompanying materials are made available under the
# terms of the MIT License which is available at
# https://opensource.org/licenses/MIT.
#
# SPDX-License-Identifier: MIT

components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    Instance:
      type: object
      required:
        - name
        - schema
        - data
        - created_by
      properties:
        id:
          type: string
          description: Unique identifier for the instance
          format: objectId
        name:
          type: string
          description: Name of the instance
        schema:
          type: string
          format: objectId
          description: Reference to the Schema this instance conforms to
        data:
          type: object
          description: The actual data/object payload
        created_by:
          type: string
          format: objectId
          description: Reference to the User who created the instance
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the instance was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the instance was last updated

    InstanceRelation:
      type: object
      required:
        - relation
        - source
        - target
        - created_by
      properties:
        id:
          type: string
          format: objectId
          description: Unique identifier for the instance relation
        relation:
          type: string
          format: objectId
          description: Reference to the Relation definition
        source:
          type: string
          format: objectId
          description: Reference to the source Instance
        target:
          type: string
          format: objectId
          description: Reference to the target Instance
        metadata:
          type: object
          description: Optional metadata for the relationship
        created_by:
          type: string
          format: objectId
          description: Reference to the User who created the relation
        description:
          type: string
          description: Optional description of the relation
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the relation was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the relation was last updated

    Relation:
      type: object
      required:
        - name
        - type
        - source
        - target
        - created_by
      properties:
        id:
          type: string
          format: objectId
          description: Unique identifier for the relation
        name:
          type: string
          description: Name of the relation
        type:
          type: string
          enum: ['composition', 'association', 'inheritance']
          default: 'association'
          description: Type of the relation
        description:
          type: string
          description: Optional description of the relation
        source:
          type: string
          format: objectId
          description: Reference to the source Schema
        target:
          type: string
          format: objectId
          description: Reference to the target Schema
        source_cardinality:
          type: string
          enum: ['one-to-one', 'zero-to-one', 'one-to-many', 'zero-to-many']
          description: Cardinality of the source side
        target_cardinality:
          type: string
          enum: ['one-to-one', 'zero-to-one', 'one-to-many', 'zero-to-many']
          description: Cardinality of the target side
        source_role_name:
          type: string
          description: Optional role name for the source
        target_role_name:
          type: string
          description: Optional role name for the target
        is_core:
          type: boolean
          default: false
          description: Indicates if the relation is core
        metadata:
          type: object
          description: Optional metadata for the relation
        created_by:
          type: string
          format: objectId
          description: Reference to the User who created the relation
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the relation was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the relation was last updated

    Schema:
      type: object
      required:
        - name
        - schema_definition
        - created_by
      properties:
        id:
          type: string
          format: objectId
          description: Unique identifier for the schema
        name:
          type: string
          description: Name of the schema
        description:
          type: string
          description: Optional description of the schema
        schema_definition:
          type: object
          description: Definition of the schema
        created_by:
          type: string
          format: objectId
          description: Reference to the User who created the schema
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the schema was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the schema was last updated

    ChangeLog:
      type: object
      required:
        - created_by
        - ref_type
        - ref
        - action
      properties:
        id:
          type: string
          description: Unique identifier for the change log entry
          format: objectId
        created_by:
          type: string
          format: objectId
          description: Reference to the User who created the change log entry
        description:
          type: string
          description: Optional description of the change
        ref_type:
          type: string
          description: Type of the referenced entity (e.g., 'Instance', 'Schema', etc.)
        ref:
          type: string
          format: objectId
          description: Reference to the entity that was changed
        action:
          type: string
          enum: ['CREATE', 'UPDATE', 'DELETE']
          description: Type of action performed on the referenced entity
        changes:
          type: object
          description: Object containing the details of what changed (flexible structure)
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the change log entry was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the change log entry was last updated
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Bad request
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
